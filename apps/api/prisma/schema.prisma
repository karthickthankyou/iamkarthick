generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Education {
    id      Int       @id @default(autoincrement())
    school  String
    degree  String
    start   DateTime
    end     DateTime?
    details String[]
}

model Experience {
    id      Int       @id @default(autoincrement())
    title   String
    company String
    start   DateTime
    end     DateTime?
    details String[]
}

model Project {
    id          Int      @id @default(autoincrement())
    createdAt   DateTime @default(now())
    date        DateTime
    title       String
    description String
    images      String[]
    github      String?
    linesOfCode Int
    Tags        Tag[]

    Technologies Technology[]
    Urls         Url[]
}

model Social {
    id          Int     @id @default(autoincrement())
    title       String
    description String?
    url         String
}

model Technology {
    id          Int       @id @default(autoincrement())
    name        String    @unique
    description String
    Projects    Project[]
}

model Url {
    id          Int      @id @default(autoincrement())
    title       String
    description String
    url         String
    projectId   Int?
    Project     Project? @relation(fields: [projectId], references: [id])
}

model FAQ {
    id       Int    @id @default(autoincrement())
    question String
    answer   String
}

model Strategy {
    id          Int              @id @default(autoincrement())
    title       String
    description String
    details     StrategyDetail[]
}

model StrategyDetail {
    id          Int        @id @default(autoincrement())
    strategyId  Int
    title       String
    description String
    resources   Resource[]
    Strategy    Strategy   @relation(fields: [strategyId], references: [id])
}

model Resource {
    id Int @id @default(autoincrement())

    type  String
    title String
    url   String

    StrategyDetail   StrategyDetail? @relation(fields: [strategyDetailId], references: [id])
    strategyDetailId Int?
}

enum Tag {
    FRONTEND
    BACKEND
    FULLSTACK
    DAPP
    AI
    MOBILE_APP
    OTHER
}
